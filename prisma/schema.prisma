// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  STUDENT
  INSTRUCTOR
}

enum Status {
  BLOCKED
  ACTIVE
  INACTIVE
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password String
  role     UserRole  @default(STUDENT)
  isDelete Boolean   @default(false)
  status   Status    @default(ACTIVE)
  Payment  Payment[]
}


model Course {
  id          String    @id @default(uuid())
  title       String
  description String
  price       Float
  isPublished Boolean   @default(false)
  modules     Module[]
  payment     Payment[]
}

model Module {
  id       String    @id @default(uuid())
  title    String
  course   Course?   @relation(fields: [courseId], references: [id])
  courseId String?
  content  Content[]
}

model Content {
  id          String  @id @default(uuid())
  title       String
  video       String?
  description String?
  assignment  String?
  quiz        Quiz[]
  Module      Module? @relation(fields: [moduleId], references: [id])
  moduleId    String?
}

model Quiz {
  id            String   @id @default(uuid())
  question      String
  options       String[]
  correctAnswer Int?
  content       Content? @relation(fields: [contentId], references: [id])
  contentId     String?
}

model Payment {
  id            String   @id @default(uuid())
  userId        String   @unique
  amount        Float
  success       Boolean  @default(false)
  transactionId String?
  user          User     @relation(fields: [userId], references: [id])
  course        Course[]
}
